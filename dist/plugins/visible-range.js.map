{"version":3,"file":"visible-range.js","sources":["../../src/plugins/visible-range/index.js"],"sourcesContent":["import { AbstractPlugin, utils, CONSTANTS, Animation } from 'photo-sphere-viewer';\r\nimport * as THREE from 'three';\r\n\r\n/**\r\n * @typedef {Object} PSV.plugins.VisibleRangePlugin.Options\r\n * @property {double[]|string[]} [latitudeRange] - latitude range as two angles\r\n * @property {double[]|string[]} [longitudeRange] - longitude range as two angles\r\n */\r\n\r\n/**\r\n * @summary Locks visible longitude and/or latitude\r\n * @extends PSV.plugins.AbstractPlugin\r\n * @memberof PSV.plugins\r\n */\r\nexport default class VisibleRangePlugin extends AbstractPlugin {\r\n\r\n  static id = 'visible-range';\r\n\r\n  /**\r\n   * @param {PSV.Viewer} psv\r\n   * @param {PSV.plugins.VisibleRangePlugin.Options} options\r\n   */\r\n  constructor(psv, options) {\r\n    super(psv);\r\n\r\n    /**\r\n     * @member {PSV.plugins.VisibleRangePlugin.Options}\r\n     * @private\r\n     */\r\n    this.config = {\r\n      latitudeRange : null,\r\n      longitudeRange: null,\r\n    };\r\n\r\n    if (options) {\r\n      this.setLatitudeRange(options.latitudeRange);\r\n      this.setLongitudeRange(options.longitudeRange);\r\n    }\r\n\r\n    this.psv.on(CONSTANTS.CHANGE_EVENTS.GET_ANIMATE_POSITION, this);\r\n    this.psv.on(CONSTANTS.CHANGE_EVENTS.GET_ROTATE_POSITION, this);\r\n  }\r\n\r\n  /**\r\n   * @package\r\n   */\r\n  destroy() {\r\n    this.psv.off(CONSTANTS.CHANGE_EVENTS.GET_ANIMATE_POSITION, this);\r\n    this.psv.off(CONSTANTS.CHANGE_EVENTS.GET_ROTATE_POSITION, this);\r\n\r\n    super.destroy();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  // eslint-disable-next-line consistent-return\r\n  handleEvent(e) {\r\n    if (e.type === CONSTANTS.CHANGE_EVENTS.GET_ANIMATE_POSITION) {\r\n      const { rangedPosition } = this.applyRanges(e.value);\r\n      return rangedPosition;\r\n    }\r\n    else if (e.type === CONSTANTS.CHANGE_EVENTS.GET_ROTATE_POSITION) {\r\n      const { rangedPosition, sidesReached } = this.applyRanges(e.value);\r\n\r\n      if (utils.intersect(['left', 'right'], sidesReached).length > 0 && this.psv.isAutorotateEnabled()) {\r\n        this.__reverseAutorotate();\r\n        return e.value;\r\n      }\r\n\r\n      return rangedPosition;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Changes the latitude range\r\n   * @param {double[]|string[]} range - latitude range as two angles\r\n   */\r\n  setLatitudeRange(range) {\r\n    // latitude range must have two values\r\n    if (range && range.length !== 2) {\r\n      utils.logWarn('latitude range must have exactly two elements');\r\n      // eslint-disable-next-line no-param-reassign\r\n      range = null;\r\n    }\r\n    // latitude range must be ordered\r\n    else if (range && range[0] > range[1]) {\r\n      utils.logWarn('latitude range values must be ordered');\r\n      // eslint-disable-next-line no-param-reassign\r\n      range = [range[1], range[0]];\r\n    }\r\n    // latitude range is between -PI/2 and PI/2\r\n    if (range) {\r\n      this.config.latitudeRange = range.map(angle => utils.parseAngle(angle, true));\r\n    }\r\n    else {\r\n      this.config.latitudeRange = null;\r\n    }\r\n\r\n    if (this.psv.prop.ready) {\r\n      this.psv.rotate(this.psv.getPosition());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Changes the longitude range\r\n   * @param {double[]|string[]} range - longitude range as two angles\r\n   */\r\n  setLongitudeRange(range) {\r\n    // longitude range must have two values\r\n    if (range && range.length !== 2) {\r\n      utils.logWarn('longitude range must have exactly two elements');\r\n      // eslint-disable-next-line no-param-reassign\r\n      range = null;\r\n    }\r\n    // longitude range is between 0 and 2*PI\r\n    if (range) {\r\n      this.config.longitudeRange = range.map(angle => utils.parseAngle(angle));\r\n    }\r\n    else {\r\n      this.config.longitudeRange = null;\r\n    }\r\n\r\n    if (this.psv.prop.ready) {\r\n      this.psv.rotate(this.psv.getPosition());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @summary Apply \"longitudeRange\" and \"latitudeRange\"\r\n   * @param {PSV.Position} position\r\n   * @returns {{rangedPosition: PSV.Position, sidesReached: string[]}}\r\n   * @private\r\n   */\r\n  applyRanges(position) {\r\n    const rangedPosition = {\r\n      longitude: position.longitude,\r\n      latitude : position.latitude,\r\n    };\r\n    const sidesReached = [];\r\n\r\n    let range;\r\n    let offset;\r\n\r\n    if (this.config.longitudeRange) {\r\n      range = utils.clone(this.config.longitudeRange);\r\n      offset = THREE.Math.degToRad(this.psv.prop.hFov) / 2;\r\n\r\n      range[0] = utils.parseAngle(range[0] + offset);\r\n      range[1] = utils.parseAngle(range[1] - offset);\r\n\r\n      if (range[0] > range[1]) { // when the range cross longitude 0\r\n        if (position.longitude > range[1] && position.longitude < range[0]) {\r\n          if (position.longitude > (range[0] / 2 + range[1] / 2)) { // detect which side we are closer too\r\n            rangedPosition.longitude = range[0];\r\n            sidesReached.push('left');\r\n          }\r\n          else {\r\n            rangedPosition.longitude = range[1];\r\n            sidesReached.push('right');\r\n          }\r\n        }\r\n      }\r\n      else if (position.longitude < range[0]) {\r\n        rangedPosition.longitude = range[0];\r\n        sidesReached.push('left');\r\n      }\r\n      else if (position.longitude > range[1]) {\r\n        rangedPosition.longitude = range[1];\r\n        sidesReached.push('right');\r\n      }\r\n    }\r\n\r\n    if (this.config.latitudeRange) {\r\n      range = utils.clone(this.config.latitudeRange);\r\n      offset = THREE.Math.degToRad(this.psv.prop.vFov) / 2;\r\n\r\n      range[0] = utils.parseAngle(Math.min(range[0] + offset, range[1]), true);\r\n      range[1] = utils.parseAngle(Math.max(range[1] - offset, range[0]), true);\r\n\r\n      if (position.latitude < range[0]) {\r\n        rangedPosition.latitude = range[0];\r\n        sidesReached.push('bottom');\r\n      }\r\n      else if (position.latitude > range[1]) {\r\n        rangedPosition.latitude = range[1];\r\n        sidesReached.push('top');\r\n      }\r\n    }\r\n\r\n    return { rangedPosition, sidesReached };\r\n  }\r\n\r\n  /**\r\n   * @summary Reverses autorotate direction with smooth transition\r\n   * @private\r\n   */\r\n  __reverseAutorotate() {\r\n    const newSpeed = -this.psv.config.autorotateSpeed;\r\n    const range = this.config.longitudeRange;\r\n    this.config.longitudeRange = null;\r\n\r\n    new Animation({\r\n      properties: {\r\n        speed: { start: this.psv.config.autorotateSpeed, end: 0 },\r\n      },\r\n      duration  : 300,\r\n      easing    : 'inSine',\r\n      onTick    : (properties) => {\r\n        this.psv.config.autorotateSpeed = properties.speed;\r\n      },\r\n    })\r\n      .then(() => new Animation({\r\n        properties: {\r\n          speed: { start: 0, end: newSpeed },\r\n        },\r\n        duration  : 300,\r\n        easing    : 'outSine',\r\n        onTick    : (properties) => {\r\n          this.psv.config.autorotateSpeed = properties.speed;\r\n        },\r\n      }))\r\n      .then(() => {\r\n        this.config.longitudeRange = range;\r\n      });\r\n  }\r\n\r\n}\r\n"],"names":["VisibleRangePlugin","psv","options","config","latitudeRange","longitudeRange","setLatitudeRange","setLongitudeRange","on","CONSTANTS","CHANGE_EVENTS","GET_ANIMATE_POSITION","GET_ROTATE_POSITION","destroy","off","handleEvent","e","type","applyRanges","value","rangedPosition","sidesReached","utils","intersect","length","isAutorotateEnabled","__reverseAutorotate","range","logWarn","map","angle","parseAngle","prop","ready","rotate","getPosition","position","longitude","latitude","offset","clone","THREE","degToRad","hFov","push","vFov","Math","min","max","newSpeed","autorotateSpeed","Animation","properties","speed","start","end","duration","easing","onTick","then","AbstractPlugin","id"],"mappings":"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"}